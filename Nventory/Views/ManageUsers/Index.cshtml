@using Nventory.ViewModels
@model IEnumerable<UserViewModel>
@{
    ViewData["Title"] = "Manage users";
}

<div class="content mt-3">
    <div class="animated fadeIn">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <a class="btn btn-info" asp-area="" asp-controller="ManageUsers" asp-action="Create"><i class="fa fa-plus"></i> Add new</a>
                    </div>
                    <div class="card-body">
                        <table id="bootstrap-data-table-export" class="table table-bordered table-hover table-condensed display" style="width:100%">
                            <thead>
                                <tr>
                                    <th class="column-align-left">Login</th>
                                    <th class="column-align-left">Name</th>
                                    <th class="column-align-left">E-mail</th>
                                    <th data-orderable="false"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model)
                                {
                                <tr>
                                    <td>
                                        <span>
                                            @user.UserName
                                            @if (user.IsAdmin)
                                            {
                                                <span class="badge badge-pill badge-danger superscript">admin</span>
                                            }
                                        </span>
                                    </td>
                                    <td>@($"{user.Surname} {user.Name} {user.Patronymic}")</td>
                                    <td>@user.Email</td>
                                    <td>
                                        <div class="btn-group">
                                            <button class="btn btn-outline-dark dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                ...
                                            </button>
                                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                <button class="dropdown-item" data-toggle="modal" data-target="#detailsUserModal" data-userName="@user.UserName" data-userId="@user.Id"><i class="fa fa-address-card"></i> Details</button>
                                                <a class="dropdown-item" asp-area="" asp-controller="ManageUsers"
                                                   asp-action="Edit" asp-route-id=@user.Id><i class="fa fa-edit"></i> Edit</a>
                                                <button class="dropdown-item" data-toggle="modal" data-target="#deleteUserModal" data-userName="@user.UserName" data-userId="@user.Id"><i class="fa fa-trash"></i> Remove</button>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>


        </div>
    </div><!-- .animated -->
</div><!-- .content -->
<!-- Delete user modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" role="dialog" aria-labelledby="userDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">New message</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body align-content-center">
                @*<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>*@
                <form asp-action="Delete">
                    <input type="hidden" name="id" id="id" />
                    <input type="submit" value="Delete" class="btn btn-danger" />
                </form>
            </div>
        </div>
    </div>
</div>
<!-- User details modal -->
<div class="modal fade" id="detailsUserModal" tabindex="-1" role="dialog" aria-labelledby="userDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">New message</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body align-content-center">
                <div id="modalAsyncContent"></div>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        jQuery(document).ready(function ($) {
            $("#bootstrap-data-table-export").DataTable({
                stateSave: true,
                "lengthMenu": [[25, 50, 100, -1], [25, 50, 100, "All"]],
                "columnDefs": [
                    { "targets": 'column-align-left', "className": "text-left align-middle" },
                    { "targets": -1, "className": "text-center", "width": "15%", "searchable": false }
                ]

            });

            $("#content-container").addClass("container-fluid");
            $("#content-container").removeClass("container");

            $('#deleteUserModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget) // Button that triggered the modal
                var userName = button.data('username') // Extract info from data-* attributes
                var userId = button.data('userid')
                // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                var modal = $(this)
                modal.find('.modal-title').text('Delete ' + userName + '?')
                modal.find('.modal-body input#id').val(userId)
            })

            $('#detailsUserModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget) // Button that triggered the modal
                var userName = button.data('username') // Extract info from data-* attributes
                var userId = button.data('userid')
                $.ajax({
                    type: 'GET',
                    url: "ManageUsers/Details",
                    data: { 'id': userId },
                    dataType: "html",
                    complete: function (data) {
                        modal.find('.modal-body div#modalAsyncContent').html(data.responseText)
                    }
                })
                var modal = $(this)
                modal.find('.modal-title').text(userName + ' info')
                //modal.find('.modal-body div#modalcontent').load('details/' + userId)
            })

        });


    </script>
    <partial name="_ValidationScriptsPartial" />
}
@section css
{
    <link rel="stylesheet" href="~/css/dropdown.css" />
}